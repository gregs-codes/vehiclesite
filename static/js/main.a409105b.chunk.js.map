{"version":3,"sources":["component/item/Car.js","component/items/Cars.js","useFetch.js","App.js","reportWebVitals.js","index.js"],"names":["Car","_ref","car","id","make","model","engine","submodel","transmission","year","color","colorHex","image","React","createElement","className","key","src","alt","style","background","width","height","Cars","cars","data","map","useFetch","url","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","fetch","then","res","json","result","App","_useFetch","console","log","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"yLA4BeA,MAxBf,SAAYC,GAAU,IAAPC,EAAGD,EAAHC,IAEbC,EASUD,EATVC,GACAC,EAQUF,EARVE,KACAC,EAOUH,EAPVG,MAEAC,GAKUJ,EANVK,SAMUL,EALVI,QACAE,EAIUN,EAJVM,aACAC,EAGUP,EAHVO,KACAC,EAEUR,EAFVQ,MACAC,EACUT,EADVS,SACAC,EAAUV,EAAVU,MACD,OACEC,IAAAC,cAAA,MAAIC,UAAU,MAAMC,IAAKb,GACxBU,IAAAC,cAAA,OAAKG,IAAKL,EAAOM,IAAKd,IAEtBS,IAAAC,cAAA,UAAKL,EAAK,OAAOL,EAAK,OAAOC,GAC7BQ,IAAAC,cAAA,UAAKR,EAAO,OAAOE,GACnBK,IAAAC,cAAA,MAAIK,MAAO,CAAEC,WAAYlB,EAAIS,SAAUU,MAAK,OAAUC,OAAM,SAAY,wBACxET,IAAAC,cAAA,UAAKJ,EAAM,IAAEC,KCPFY,MAZf,SAAatB,GAAW,IACfuB,EADWvB,EAAJwB,KACPD,KAET,OACAX,IAAAC,cAAA,MAAIC,UAAU,WACTS,EAAKE,IAAI,SAAAxB,GAAG,OACXW,IAAAC,cAACd,EAAG,CAACE,IAAKA,uBCmBDyB,MA1Bf,SAAkBC,GAAK,IAAAC,EACKC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA/BJ,EAAIM,EAAA,GAAEE,EAAOF,EAAA,GAAAG,EACUJ,oBAAS,GAAKK,EAAAH,YAAAE,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAAAG,EACAR,mBAAS,MAAKS,EAAAP,YAAAM,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAmBtB,OAjBAG,oBAAU,WACNL,GAAW,GACXM,MAAMf,GACLgB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAK,UACrBF,KACD,SAACG,GACGV,GAAW,GACXJ,EAAQc,IAKZ,SAACP,GACGH,GAAW,GACXI,EAASD,MAEd,CAACZ,IACG,CAAEH,OAAMW,UAASI,UCJbQ,MAdf,WAAe,IAAAC,EAEoBtB,EAAS,mDAAlCF,EAAIwB,EAAJxB,KAAMW,EAAOa,EAAPb,QAASI,EAAKS,EAALT,MACvB,OAAIJ,EAAgBvB,IAAAC,cAAA,UAAI,kBACpB0B,GAAOU,QAAQC,IAAIX,GAGrB3B,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAI,cACJD,IAAAC,cAACS,EAAI,CAACE,KAAMA,OCJH2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAZ,KAAAW,EAAAE,KAAA,UAAqBb,KAAK,SAAA3C,GAAiD,IAA9CyD,EAAMzD,EAANyD,OAAQC,EAAM1D,EAAN0D,OAAQC,EAAM3D,EAAN2D,OAAQC,EAAM5D,EAAN4D,OAAQC,EAAO7D,EAAP6D,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHtD,IAAAC,cAACD,IAAMuD,WAAU,KACfvD,IAAAC,cAACkC,EAAG,QAORI","file":"static/js/main.a409105b.chunk.js","sourcesContent":["import React from 'react';\nimport '../../cars.css'\n\n\nfunction Car({ car }) {\n\tconst {\n\t\tid,\n\t\tmake,\n\t\tmodel,\n\t\tsubmodel,\n\t\tengine,\n\t\ttransmission,\n\t\tyear,\n\t\tcolor,\n\t\tcolorHex,\n\t\timage } = car\n\treturn (\n\t\t\t<li className=\"car\" key={id}>\n\t\t\t\t<img src={image} alt={make} />\n\t\t\t\t{/*<a style={`background-color:${colorHex}`} href='#'>{colorHex}</a>*/}\n\t\t\t\t<h3>{year}&nbsp;{make}&nbsp;{model}</h3>\n\t\t\t\t<dd>{engine}&nbsp;{transmission}</dd>\n\t\t\t\t<dd style={{ background: car.colorHex, width: `10px`, height: `10px` }}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</dd>\n\t\t\t\t<dd>{color}-{colorHex}</dd>\n\t\t\t</li>\n\t\t\n\t);\n}\nexport default Car;","import React from 'react';\nimport Car from '../item/Car'\nimport '../../cars.css'\n\nfunction Cars({ data }) {\n\tconst { cars } = data\n\nreturn (\n<ul className=\"carList\">\n    {cars.map(car => (\n      <Car car={car} />\n      ))}\n</ul>\n);\n}\n\nexport default Cars;","import { useEffect, useState } from 'react'\n//import axios from 'axios'\n\nfunction useFetch(url) {\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        setLoading(true)\n        fetch(url)\n        .then(res => res.json('cars'))\n        .then(\n        (result) => {\n            setLoading(false);\n            setData(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n            setLoading(false);\n            setError(error);\n        })\n    }, [url])\n    return { data, loading, error }\n}\n\n\nexport default useFetch","import React from 'react';\n\nimport Cars from './component/items/Cars'\nimport './App.css';\nimport './cars.css'\nimport useFetch from './useFetch'\n\nfunction App() {\n\n  const { data, loading, error } = useFetch('https://yegorka78.github.io/gscars/data/db.json')\n  if (loading) return <h1> LOADING ... </h1>\n  if (error) console.log(error);\n\n  return (\n    <div className=\"App\">\n      <h1>Here it is</h1>\n      <Cars data={data}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}